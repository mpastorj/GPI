/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package swgpi;

import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Marilyn
 */
public class InterfazEmpleador extends javax.swing.JFrame {

    /**
     * Creates new form InterfazEmpleador
     */
    public InterfazEmpleador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cargo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nivel = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        estimulos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        xy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        habilidades = new javax.swing.JComboBox();
        competencias = new javax.swing.JComboBox();
        necesidades = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        salir = new javax.swing.JButton();
        descripciona = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cargo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cargo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cargoItemStateChanged(evt);
            }
        });
        cargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargoActionPerformed(evt);
            }
        });

        jLabel1.setText("Cargo que desea analizar:");

        jLabel2.setText("Nivel Organizacional:");

        nivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estratégico", "Táctico", "Operacional" }));
        nivel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nivelItemStateChanged(evt);
            }
        });
        nivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nivelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PARÁMETROS"));

        jLabel4.setText("   COMPETENCIAS");

        jLabel5.setText("    NECESIDADES");

        jLabel6.setText("             ESTÍMULOS APLICABLES");

        jLabel7.setText("   X/Y:");

        jLabel8.setText("    T/P:");

        necesidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                necesidadesActionPerformed(evt);
            }
        });

        jLabel3.setText("   HABILIDADES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21)
                        .addComponent(xy, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(habilidades, 0, 146, Short.MAX_VALUE)
                            .addComponent(competencias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(necesidades, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 105, Short.MAX_VALUE))
                    .addComponent(estimulos))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel3))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(estimulos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(habilidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(necesidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(competencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(tp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        salir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        salir.setText("Salir");

        jLabel9.setText("DESCRIPCIÓN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cargo, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                        .addComponent(salir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripciona, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(salir)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41)
                .addComponent(jLabel9)
                .addGap(8, 8, 8)
                .addComponent(descripciona, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargoActionPerformed
        // TODO add your handling code here:
 
      conexion cn = new conexion();
      String cargos = (String)cargo.getSelectedItem(); 
      cn.setEsSelect(true);
      cn.setComandoSQL("select xy,tp,descripción from cargo where nombre='"+cargos+"'");
      cn.conectar();
      
        try {  
           while(cn.getRst().next())
           {
            cn.getRst().getObject("xy");
            cn.getRst().getObject("tp");
            cn.getRst().getObject("descripción");
            String nombresxy=(String)cn.getRst().getObject("xy");
            String nombrestp=(String)cn.getRst().getObject("tp");
            String desc=(String)cn.getRst().getObject("descripción");
            xy.setText(nombresxy);    
            tp.setText(nombrestp); 
            descripciona.setText(desc); 
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn.cerrarConexion();

         int codigo=0;
         conexion cn1 = new conexion();
        cn1.setEsSelect(true);
        cn1.setComandoSQL("select idCargo from cargo where nombre='"+cargos+"'");
      
      cn1.conectar();
      
        try {  
           while(cn1.getRst().next())
           {
            codigo=cn1.getRst().getInt("idCargo");
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn1.cerrarConexion();
         
            conexion cn2 = new conexion();
      cn2.setEsSelect(true);
      cn2.setComandoSQL("select nombre from Habilidades where idHabilidades IN (select Habilidades_idHabilidades from cargo_has_habilidades where Cargo_idCargo='"+codigo+"')");
      
      cn2.conectar();
      
        try {  
           while(cn2.getRst().next())
           {
            habilidades.addItem(cn2.getRst().getObject("nombre"));  
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn2.cerrarConexion();
        
        
         conexion cn3 = new conexion();
      cn3.setEsSelect(true);
      cn3.setComandoSQL("select nombre from Competencias where idCompetencias IN (select Competencias_idCompetencias from cargo_has_competencias where Cargo_idCargo='"+codigo+"')");
      
      cn3.conectar();
      
        try {  
           while(cn3.getRst().next())
           {
            competencias.addItem(cn3.getRst().getObject("nombre"));  
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn3.cerrarConexion();
   
         conexion cn4 = new conexion();
      cn4.setEsSelect(true);
      cn4.setComandoSQL("select nombre from Necesidades where idNecesidades IN (select Necesidades_idNecesidades from cargo_has_necesidades where Cargo_idCargo='"+codigo+"')");
      
      cn4.conectar();
      
        try {  
           while(cn4.getRst().next())
           {
            necesidades.addItem(cn4.getRst().getObject("nombre"));  
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn4.cerrarConexion();
    }//GEN-LAST:event_cargoActionPerformed

    private void nivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nivelActionPerformed
         int tipo = 0;
        String niveles=(String) nivel.getSelectedItem();
        if("Estratégico".equals(niveles)){
             tipo=3;
        }
        if("Táctico".equals(niveles)){
             tipo=2;
        }
        if("Operacional".equals(niveles)){
             tipo=1;
        }
        
     
      conexion cn = new conexion();
      
      String cargos = (String)cargo.getSelectedItem(); 
      cn.setEsSelect(true);
      cn.setComandoSQL("select nombre,nivel from cargo where nivel='"+tipo+"'order by nombre");
      cn.conectar();
      
        try {  
           while(cn.getRst().next())
           {
          cargo.addItem(cn.getRst().getObject("nombre"));       
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn.cerrarConexion();
    }//GEN-LAST:event_nivelActionPerformed

    private void nivelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nivelItemStateChanged
        // TODO add your handling code here:
        cargo.removeAllItems();
    }//GEN-LAST:event_nivelItemStateChanged

    private void cargoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cargoItemStateChanged
        // TODO add your handling code here:
        habilidades.removeAllItems();
        competencias.removeAllItems();
        necesidades.removeAllItems();
    }//GEN-LAST:event_cargoItemStateChanged

    private void necesidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_necesidadesActionPerformed
        // TODO add your handling code here:
        String nec= (String)necesidades.getSelectedItem(); 
        conexion cn = new conexion();
      
      cn.setEsSelect(true);
      cn.setComandoSQL("select estimulo from necesidades where nombre='"+nec+"'");
      cn.conectar();
      
        try {  
           while(cn.getRst().next())
           {
          estimulos.setText((String)cn.getRst().getObject("estimulo"));     
        }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, "Error al cargar lista de cargos", ex);
        } 
         cn.cerrarConexion();
    }//GEN-LAST:event_necesidadesActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazEmpleador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazEmpleador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazEmpleador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazEmpleador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new InterfazEmpleador().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox cargo;
    private javax.swing.JComboBox competencias;
    private javax.swing.JTextField descripciona;
    private javax.swing.JTextField estimulos;
    private javax.swing.JComboBox habilidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox necesidades;
    public javax.swing.JComboBox nivel;
    private javax.swing.JButton salir;
    public javax.swing.JTextField tp;
    public javax.swing.JTextField xy;
    // End of variables declaration//GEN-END:variables
}
